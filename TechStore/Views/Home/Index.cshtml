@using TechStore.Models.DTOs
@model ProductDisplayModel

<div class="my-2">
    <form asp-action="Index" method="get" class="row row-cols-lg-auto g-3 align-items-center">
        <div class="col-12">
            <label class="visually-hidden" for="brandId">Brands</label>
            <select class="form-select" id="brandId" name="brandId">
                <option selected>Choose brand...</option>
                @foreach (var brand in Model.Brands)
                {
                    <option selected="@(brand.Id == Model.BrandId)" value="@brand.Id">@brand.Name</option>
                }
            </select>
        </div>

        <div class="col-12">
            <label class="visually-hidden" for="sterm">Search</label>
            <div class="input-group">
                <input type="text" class="form-control" value="@Model.STerm" id="sterm" name="sterm" placeholder="Search">
            </div>
        </div>

        <div class="col-12">
            <button type="submit" class="btn btn-primary">Search</button>
            <a href="/Home/Index" class="btn btn-dark">Reset</a>
        </div>
    </form>
</div>

<div class="w-100 mt-4 d-flex flex-wrap ">
    @foreach (var product in Model.Products)
    {
        <div class="card mx-2 mb-4" style="width: 11rem;">
            @if (string.IsNullOrEmpty(product.Image))
            {
                <img style="width:100%;height:180px" src="/images/NoImage.png" class="card-img-top" alt="...">
            }
            else
            {
                <img style="width:100%;height:180px" src="/images/@product.Image" class="card-img-top" alt="...">
            }
            <div class="card-body">
                <h5 class="card-title">@product.ProductName</h5>
                <p class="card-text">
                    <b>Category:</b>@product.CategoryName <br />
                    <b>Price: </b>@product.Price <br />
                    <b>Brand: </b>@product.BrandName <br />
                </p>
                @if (product.Quantity > 0)
                {
                    <button type="button" onclick="add(@product.Id)" class="btn btn-primary">Add to cart</button>
                }
                else
                {
                    <span style="border: 1px solid;padding: 5px 8px;color: red;border-radius: 5px;">Out of stock</span>
                }
            </div>
        </div>
    }
</div>

@section Scripts {
    <script>
        async function add(productId) {
            var usernameEl = document.getElementById("username");
            if (usernameEl == null) {
                window.location.href = "/Identity/Account/Login";
            }

            try {
                var response = await fetch(`/Cart/AddItem?productId=${productId}`);
                if (response.status == 200) {
                    var result = await response.json();
                    var cartCountEl = document.getElementById("cartCount");
                    cartCountEl.innerHTML = result;
                    window.location.href = "#cartCount";
                }
            } catch (err) {
                console.log(err);
            }
        }
    </script>
}

<div class="pagination d-flex justify-content-end align-items-center mt-3">
    @if (ViewBag.CurrentPage > 1)
    {
        <a asp-action="Index" asp-route-sterm="@Model.STerm" asp-route-brandId="@Model.BrandId" asp-route-page="@(ViewBag.CurrentPage - 1)" class="btn btn-primary pagination-btn">Previous</a>
    }

    <span class="pagination-info mx-2">Page @ViewBag.CurrentPage of @ViewBag.TotalPages</span>

    @if (ViewBag.CurrentPage < ViewBag.TotalPages)
    {
        <a asp-action="Index" asp-route-sterm="@Model.STerm" asp-route-brandId="@Model.BrandId" asp-route-page="@(ViewBag.CurrentPage + 1)" class="btn btn-primary pagination-btn">Next</a>
    }
</div>
